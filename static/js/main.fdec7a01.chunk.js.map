{"version":3,"sources":["context/ThemeContext.js","components/themeSelector/ThemeSelector.jsx","components/header/Header.jsx","components/footer/Footer.jsx","configs/config.js","components/searchTabs/SearchTabs.jsx","components/searchByMap/SearchByMap.jsx","components/searchGrid/searchFilter/SearchFilter.jsx","helper/index.js","components/searchGrid/calenderSlider/calenderSliderDesktop/CalenderDateItem.jsx","components/searchGrid/calenderSlider/calenderSliderDesktop/CalenderSliderDesktop.jsx","components/searchGrid/calenderSlider/calenderSliderMobile/CalenderDateButton.jsx","components/searchGrid/calenderSlider/calenderSliderMobile/CalenderSliderMobile.jsx","redux/search/searchTypes.js","redux/search/searchActions.js","components/searchGrid/calenderSlider/CalenderSlider.jsx","components/searchGrid/resultData/slotDetail/SlotDetail.jsx","components/searchGrid/resultData/slot/SlotUI.jsx","components/searchGrid/resultData/SessionsItems.jsx","components/searchGrid/resultData/center/Center.jsx","components/searchGrid/resultData/resultCards/resultCard/ResultCard.jsx","components/searchGrid/resultData/resultCards/ResultCards.jsx","components/searchGrid/resultData/ResultDataItem.jsx","configs/lang.config.js","components/searchGrid/resultData/ResultDataListWithFilter.jsx","services/index.js","components/searchGrid/resultData/ResultDataList.jsx","components/searchGrid/SearchGrid.jsx","redux/states/stateTypes.js","redux/states/stateActions.js","redux/districts/districtsTypes.js","redux/districts/districtsActions.js","components/searchByDistrict/SearchByDistrict.jsx","components/searchByPin/SearchByPin.jsx","components/home/Home.jsx","redux/districts/districtsReducer.js","redux/states/stateReducer.js","redux/search/searchReducer.js","redux/rootReducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["themeContext","React","createContext","ThemeProvider","children","useState","mode","setTheme","Provider","value","Consumer","ThemeSelector","ctx","useContext","checked","setchecked","className","htmlFor","onChange","onColor","offColor","Header","Footer","searchTypes","Object","freeze","searchByMap","searchByPin","searchByDistrict","searchFilter","id","siteConfig","APIConfig","process","SearchTabs","props","tabClickHandler","activeButton","setActiveButton","clickButtonHandler","buttonType","onClick","SearchByMap","SearchFilter","map","filter","type","name","e","filterId","onSelectingFilter","target","onFilterClicked","getDates","daysCount","daysList","i","day","Date","setDate","getDate","push","CalenderDateItem","moment","format","daysInSearchFilter","datesPerPage","totalDays","CalenderSliderDesktop","changeDateHandler","numberOfPages","Math","ceil","currentPage","setCurrentPage","searchDate","useSelector","state","search","useEffect","formattedCurrentDate","showingListDates","slice","nextButtonClass","prevButtonClass","disabled","color","size","CalenderDateButton","formattedDate","dateWithYear","activeButtonRef","useRef","current","scrollIntoView","behavior","buttonClass","ref","CalenderSliderMobile","ADD_SEARCH_DATE","addSearchDate","states","payload","CalenderSlider","dispatch","useDispatch","date","SlotDetail","slotInfo","dose1","availableDose","dose2","vaccineName","ageCategory","slots","length","slot","SlotUI","showModal","setShowModal","ReactModal","setAppElement","handleCloseModal","isOpen","contentLabel","onRequestClose","overlayClassName","role","SessionsItems","sessionsPerDay","session","available_capacity_dose1","available_capacity","available_capacity_dose2","vaccine","min_age_limit","session_id","isEmpty","VaccineFee","fee","Center","feeType","address","vaccineFee","getDoseText","dose","ResultCard","doseText1","doseText2","ResultCards","sessionInfo","ResultDataItem","sessions","centerData","sessionObj","add","formattedSession","forEach","clubSessionWithDate","vaccine_fees","fee_type","keys","dates","uniqueKey","center_id","lang","pinError","pinFieldPlaceholder","stateFieldError","districtFieldError","vaccineNotAvailable","ResultDataListWithFilter","responseData","activeFilters","modifiedRespnseData","modifiedData","includes","center","result","filterCenterByFeeType","newSessions","checkAge","checkVaccine","applyFilterOnSessions","modifyResponse","cloneDeep","slotCenter","fetchSlotByPin","pincode","a","axios","get","response","data","fetchStates","fetchDistricts","stateId","fetchSlotsByDistrict","districtId","ResultData","setResponseData","pin","district","fetchSlotData","useCallback","centers","SearchGrid","setActiveFilters","newActiveFilters","ResultDataList","FETCH_STATES_REQUEST","FETCH_STATES_SUCCESS","FETCH_STATES_FAILURE","fetchStatesRequest","fetchStatesSuccess","fetchStatesFailure","error","FETCH_DISTRICTS_REQUEST","FETCH_DISTRICTS_SUCCESS","FETCH_DISTRICTS_FAILURE","fetchDistrictsRequest","fetchDistrictsSuccess","districts","fetchDistrictsFailure","SearchByDistrict","stateError","setStateError","districtError","setDistrictError","enteredStateId","setEnteredStateId","setDistrictId","districtRef","stateRef","fetchState","fetchStateAPI","onSubmit","preventDefault","fetchDistrictsAPI","fetchDistrictsAction","data-testid","state_id","state_name","district_id","district_name","SearchByPin","setPin","setError","pinRef","pinCode","parseInt","isNumber","String","placeholder","enteredValue","Home","selectedTab","setSelectedTab","initialState","loading","reducer","action","rootReducer","combineReducers","statesReducer","districtsReducer","searchReducer","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","compose","applyMiddleware","thunk","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdec7a01.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst themeContext = React.createContext();\r\n\r\n//const ThemeProvider = themeContext.Provider;\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [mode, setTheme] = useState(\"light\");\r\n  return (\r\n    <themeContext.Provider\r\n      value={{\r\n        mode,\r\n        setTheme: () => setTheme(mode === \"dark\" ? \"light\" : \"dark\"),\r\n      }}\r\n    >\r\n      {children}\r\n    </themeContext.Provider>\r\n  );\r\n};\r\n\r\nconst ThemeConsumer = themeContext.Consumer;\r\n\r\nexport { ThemeConsumer, ThemeProvider };\r\n\r\nexport default themeContext;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Switch from \"react-switch\";\r\n\r\nimport themeContext from \"context/ThemeContext\";\r\nimport \"./style.scss\";\r\n\r\nfunction ThemeSelector() {\r\n  const ctx = useContext(themeContext);\r\n\r\n  const [checked, setchecked] = useState(false);\r\n\r\n  const onChangeHandler = () => {\r\n    ctx.setTheme(checked);\r\n    setchecked(!checked);\r\n  };\r\n  return (\r\n    <form className=\"darkThemeSelector-form\">\r\n      <label htmlFor=\"themeSelector\">Theme</label>\r\n      <Switch\r\n        onChange={onChangeHandler}\r\n        onColor=\"#ffa500\"\r\n        offColor=\"#000\"\r\n        checked={checked}\r\n        className=\"darkThemeSelector-switch\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ThemeSelector;\r\n","import React, { useContext } from \"react\";\r\nimport \"./style.scss\";\r\nimport themeContext from \"context/ThemeContext\";\r\nimport ThemeSelector from \"components/themeSelector\";\r\n\r\nfunction Header() {\r\n  const ctx = useContext(themeContext);\r\n\r\n  return (\r\n    <header className={ctx.mode}>\r\n      <ThemeSelector />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return <footer></footer>;\r\n}\r\n\r\nexport default Footer;\r\n","export const searchTypes = Object.freeze({\r\n  searchByMap: 1,\r\n  searchByPin: 2,\r\n  searchByDistrict: 3,\r\n});\r\n\r\nexport const searchFilter = [\r\n  { id: \"age18\", value: \"Age 18+\" },\r\n  { id: \"age45\", value: \"Age 45+\" },\r\n  { id: \"covishield\", value: \"Covishield\" },\r\n  { id: \"covaxin\", value: \"Covaxin\" },\r\n  { id: \"sputnik\", value: \"Sputnik V\" },\r\n  { id: \"free\", value: \"Free\" },\r\n  { id: \"paid\", value: \"Paid\" },\r\n];\r\n\r\nexport const siteConfig = {\r\n  daysInSearchFilter: 28,\r\n  datesPerPage: 7,\r\n};\r\n\r\nexport const APIConfig = {\r\n  baseUrl: process.env.REACT_APP_API_ENDPOINT,\r\n  fetchStates: \"/v2/admin/location/states\",\r\n  fetchDistrict: \"/v2/admin/location/districts\",\r\n  searchByPin: \"/v2/appointment/sessions/public/calendarByPin\",\r\n  searchByDistrict: \"/v2/appointment/sessions/public/calendarByDistrict\",\r\n  searchByMap: \"/v2/appointment/centers/public/findByLatLong\",\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport themeContext from \"context/ThemeContext\";\r\nimport { searchTypes } from \"configs/config\";\r\nimport \"./style.scss\";\r\n\r\nfunction SearchTabs(props) {\r\n  const { tabClickHandler } = props;\r\n  const [activeButton, setActiveButton] = useState(searchTypes.searchByPin);\r\n  const clickButtonHandler = (buttonType) => {\r\n    setActiveButton(buttonType);\r\n    tabClickHandler(buttonType);\r\n  };\r\n\r\n  const ctx = useContext(themeContext);\r\n\r\n  return (\r\n    <div className={`${ctx.mode} searchTabs`}>\r\n      <div className=\"searchButtons\">\r\n        <button\r\n          className={\r\n            activeButton === searchTypes.searchByPin\r\n              ? \"searchButtons-active button\"\r\n              : \"button\"\r\n          }\r\n          onClick={() => clickButtonHandler(searchTypes.searchByPin)}\r\n        >\r\n          Search by PIN\r\n        </button>\r\n        <button\r\n          className={\r\n            activeButton === searchTypes.searchByDistrict\r\n              ? \"searchButtons-active button\"\r\n              : \"button\"\r\n          }\r\n          onClick={() => clickButtonHandler(searchTypes.searchByDistrict)}\r\n        >\r\n          Search by District\r\n        </button>\r\n        <button\r\n          className={\r\n            activeButton === searchTypes.searchByMap\r\n              ? \"searchButtons-active button\"\r\n              : \"button\"\r\n          }\r\n          onClick={() => clickButtonHandler(searchTypes.searchByMap)}\r\n        >\r\n          Search by MAP\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchTabs;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nfunction SearchByMap() {\r\n  return (\r\n    <>\r\n      <div className=\"searchByMap\">\r\n        <span>Coming Soon...</span>\r\n        {/* <label htmlFor=\"searchLocation\">Search Location for Vaccination</label>\r\n        <input type=\"text\" name=\"searchLocation\" id=\"searchLocation\" /> */}\r\n      </div>\r\n      {/* <div>Map</div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchByMap;\r\n","import React from \"react\";\r\nimport { searchFilter } from \"configs/config\";\r\nimport \"./style.scss\";\r\n\r\nfunction SearchFilter(props) {\r\n  const onFilterClicked = (e, filterId) => {\r\n    props.onSelectingFilter(filterId, e.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div className=\"searchFilter\">\r\n      <form>\r\n        {searchFilter.map((filter) => {\r\n          return (\r\n            <div className=\"searchFilter-item\" key={filter.id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                name={filter.id}\r\n                id={filter.id}\r\n                onClick={(e) => onFilterClicked(e, filter.id)}\r\n              />\r\n              <label htmlFor={filter.id}>{filter.value}</label>\r\n            </div>\r\n          );\r\n        })}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchFilter;\r\n","/**\r\n * Return number of days\r\n */\r\nexport const getDates = (daysCount) => {\r\n  let daysList = [],\r\n    i = 0;\r\n  while (i < daysCount) {\r\n    let day = new Date();\r\n    day.setDate(day.getDate() + i);\r\n    daysList.push(day);\r\n    i++;\r\n  }\r\n  return daysList;\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nfunction CalenderDateItem(props) {\r\n  return (\r\n    <div className=\"calenderDateItem\">\r\n      {moment(props.day).format(\"DD MMMM YY\")}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalenderDateItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from \"react-icons/md\";\r\nimport { getDates } from \"helper\";\r\nimport { siteConfig } from \"configs/config\";\r\nimport CalenderDateItem from \"./CalenderDateItem\";\r\nimport moment from \"moment\";\r\nimport \"./style.scss\";\r\n\r\nconst { daysInSearchFilter, datesPerPage } = siteConfig;\r\n\r\nconst totalDays = getDates(daysInSearchFilter);\r\n\r\nfunction CalenderSliderDesktop(props) {\r\n  const { changeDateHandler } = props;\r\n  const numberOfPages = Math.ceil(daysInSearchFilter / datesPerPage);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const searchDate = useSelector((state) => state.search.searchDate);\r\n\r\n  useEffect(() => {\r\n    const formattedCurrentDate = moment(\r\n      totalDays[currentPage * datesPerPage]\r\n    ).format(\"DD-MM-YYYY\");\r\n\r\n    changeDateHandler(formattedCurrentDate);\r\n  }, [currentPage, changeDateHandler]);\r\n\r\n  useEffect(() => {\r\n    if (searchDate === moment(totalDays[0]).format(\"DD-MM-YYYY\"))\r\n      setCurrentPage(0);\r\n  }, [searchDate]);\r\n\r\n  const previousClicked = () => {\r\n    setCurrentPage((currentPage) => currentPage - 1);\r\n  };\r\n\r\n  const nextClicked = () => {\r\n    setCurrentPage((currentPage) => currentPage + 1);\r\n  };\r\n\r\n  let showingListDates = totalDays.slice(\r\n    datesPerPage * currentPage,\r\n    datesPerPage * (currentPage + 1)\r\n  );\r\n\r\n  let nextButtonClass = \"calenderSliderDesktop-next-btn\";\r\n  nextButtonClass =\r\n    currentPage === numberOfPages - 1\r\n      ? `${nextButtonClass} --disable`\r\n      : nextButtonClass;\r\n\r\n  let prevButtonClass = \"calenderSliderDesktop-prev-btn\";\r\n  prevButtonClass =\r\n    currentPage === 0 ? `${prevButtonClass} --disable` : prevButtonClass;\r\n\r\n  return (\r\n    <div className=\"calenderSliderDesktop\">\r\n      <div className=\"calenderSliderDesktop-items-container\">\r\n        <div className=\"calenderSliderDesktop-prev\">\r\n          <button\r\n            className={prevButtonClass}\r\n            onClick={previousClicked}\r\n            disabled={currentPage === 0}\r\n          >\r\n            <MdKeyboardArrowLeft color=\"#ffffff\" size=\"35\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"calenderSliderDesktop-datesList\">\r\n          {showingListDates.map((day) => {\r\n            return <CalenderDateItem key={day} day={day} />;\r\n          })}\r\n        </div>\r\n        <div className=\"calenderSliderDesktop-next\">\r\n          <button\r\n            className={nextButtonClass}\r\n            onClick={nextClicked}\r\n            disabled={currentPage === numberOfPages - 1}\r\n          >\r\n            <MdKeyboardArrowRight color=\"#ffffff\" size=\"35\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalenderSliderDesktop;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction CalenderDateButton(props) {\r\n  const { day, changeDateHandler } = props;\r\n  const formattedDate = moment(day).format(\"DD MMMM\");\r\n  const dateWithYear = moment(day).format(\"DD-MM-YYYY\");\r\n\r\n  const searchDate = useSelector((state) => state.search.searchDate);\r\n  const activeButtonRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      activeButtonRef.current &&\r\n      searchDate === moment(new Date()).format(\"DD-MM-YYYY\")\r\n    )\r\n      activeButtonRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [searchDate]);\r\n\r\n  let buttonClass = \"calenderSliderMobile-button\";\r\n  buttonClass =\r\n    searchDate === dateWithYear ? `${buttonClass} --active` : `${buttonClass}`;\r\n  return (\r\n    <div className=\"calenderSliderMobile-button-wrapper\">\r\n      <button\r\n        className={buttonClass}\r\n        onClick={() => changeDateHandler(dateWithYear)}\r\n        ref={searchDate === dateWithYear ? activeButtonRef : null}\r\n      >\r\n        {formattedDate}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalenderDateButton;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { getDates } from \"helper\";\r\nimport { siteConfig } from \"configs/config\";\r\nimport CalenderDateButton from \"./CalenderDateButton\";\r\nimport \"./style.scss\";\r\n\r\nconst { daysInSearchFilter } = siteConfig;\r\nconst totalDays = getDates(daysInSearchFilter);\r\n\r\nfunction CalenderSliderMobile(props) {\r\n  const { changeDateHandler } = props;\r\n\r\n  return (\r\n    <div className=\"calenderSliderMobile\">\r\n      {totalDays.map((day) => {\r\n        return (\r\n          <CalenderDateButton\r\n            key={moment(day).format(\"DD MMMM YY\")}\r\n            day={day}\r\n            changeDateHandler={changeDateHandler}\r\n          ></CalenderDateButton>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalenderSliderMobile;\r\n","export const ADD_SEARCH_DATE = \"ADD_SEARCH_DATE\";\r\n","import { ADD_SEARCH_DATE } from \"./searchTypes\";\r\n\r\nexport const addSearchDate = (states) => {\r\n  return {\r\n    type: ADD_SEARCH_DATE,\r\n    payload: states,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport CalenderSliderDesktop from \"./calenderSliderDesktop\";\r\nimport CalenderSliderMobile from \"./calenderSliderMobile\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addSearchDate } from \"redux/search/searchActions\";\r\n\r\nimport \"./style.scss\";\r\n\r\nfunction CalenderSlider() {\r\n  const dispatch = useDispatch();\r\n  const changeDateHandler = (date) => {\r\n    dispatch(addSearchDate(date));\r\n  };\r\n  return (\r\n    <>\r\n      <CalenderSliderDesktop changeDateHandler={changeDateHandler} />\r\n      <CalenderSliderMobile changeDateHandler={changeDateHandler} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CalenderSlider;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nconst SlotDetail = (props) => {\r\n  const { dose1, availableDose, dose2, vaccineName, ageCategory, date, slots } =\r\n    props.slotInfo;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"slotDetail\">\r\n        <h3>Slot Detail</h3>\r\n        <div className=\"slotDetail-row\">\r\n          <div className=\"slotDetail-row-heading\">\r\n            <span>Available Doses</span>\r\n          </div>\r\n          <div className=\"slotDetail-row-data\">\r\n            <span>{availableDose}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"slotDetail-row\">\r\n          <div className=\"slotDetail-row-heading\">\r\n            <span>Available Dose 1</span>\r\n          </div>\r\n          <div className=\"slotDetail-row-data\">\r\n            <span>{dose1}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"slotDetail-row\">\r\n          <div className=\"slotDetail-row-heading\">\r\n            <span>Available Dose 2 </span>\r\n          </div>\r\n          <div className=\"slotDetail-row-data\">\r\n            <span>{dose2}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"slotDetail-row\">\r\n          <div className=\"slotDetail-row-heading\">\r\n            <span>Vaccine</span>\r\n          </div>\r\n          <div className=\"slotDetail-row-data\">\r\n            <span>{vaccineName}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"slotDetail-row\">\r\n          <div className=\"slotDetail-row-heading\">\r\n            <span>Age Category</span>\r\n          </div>\r\n          <div className=\"slotDetail-row-data\">\r\n            <span>{ageCategory}+</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"slotDetail-row\">\r\n          <div className=\"slotDetail-row-heading\">\r\n            <span>Date</span>\r\n          </div>\r\n          <div className=\"slotDetail-row-data\">\r\n            <span>{date}</span>\r\n          </div>\r\n        </div>\r\n        {slots.length > 0 && (\r\n          <div className=\"slotDetail-row\">\r\n            <div className=\"slotDetail-row-heading\">\r\n              <span>Slotes</span>\r\n            </div>\r\n            <div className=\"slotDetail-row-data slot-timing\">\r\n              {slots.map((slot) => {\r\n                return (\r\n                  <div key={slot}>\r\n                    <span>{slot}</span>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlotDetail;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactModal from \"react-modal\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport SlotDetail from \"components/searchGrid/resultData/slotDetail/SlotDetail\";\r\n\r\nimport \"./style.scss\";\r\n\r\nfunction SlotUI(props) {\r\n  const { dose1, availableDose, dose2, vaccineName, ageCategory } = props;\r\n  const [showModal, setShowModal] = useState(false);\r\n  const handleOpenModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    ReactModal.setAppElement(\"body\");\r\n  }, []);\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  return (\r\n    <div className=\"slotUI\">\r\n      {availableDose > 0 && (\r\n        <div\r\n          className=\"slotUI-availableDoses hand-pointer\"\r\n          onClick={handleOpenModal}\r\n        >\r\n          <div className=\"slotUI-dose1\">\r\n            <span>D1</span>\r\n            <span>{dose1}</span>\r\n          </div>\r\n          <div className=\"slotUI-total-available-dose\">\r\n            <span>{availableDose}</span>\r\n          </div>\r\n          <div className=\"slotUI-dose2\">\r\n            <span>D2</span>\r\n            <span>{dose2}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {availableDose === 0 && (\r\n        <div className=\"slotUI-notAvailable\">\r\n          <span>Booked</span>\r\n        </div>\r\n      )}\r\n      <div className=\"slotUI-vaccineName\">\r\n        <span>{vaccineName}</span>\r\n      </div>\r\n      <div className=\"slotUI-ageCategory\">\r\n        <span>Age {ageCategory}+</span>\r\n      </div>\r\n      <ReactModal\r\n        isOpen={showModal}\r\n        contentLabel=\"Slot Detail\"\r\n        onRequestClose={handleCloseModal}\r\n        className=\"cowinModal\"\r\n        overlayClassName=\"cowinModalOverlay\"\r\n      >\r\n        <span\r\n          role=\"button\"\r\n          className=\"cowinModal-closeButton\"\r\n          onClick={handleCloseModal}\r\n        >\r\n          <MdClose color=\"red\" size=\"2em\" />\r\n        </span>\r\n        <SlotDetail\r\n          slotInfo={{\r\n            dose1,\r\n            availableDose,\r\n            dose2,\r\n            vaccineName,\r\n            ageCategory,\r\n            date: props.date,\r\n            slots: props.slots,\r\n          }}\r\n        ></SlotDetail>\r\n      </ReactModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SlotUI;\r\n","import React from \"react\";\r\nimport SlotUI from \"./slot/SlotUI\";\r\nimport \"./style.scss\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nfunction SessionsItems(props) {\r\n  const sessionsPerDay = props.session;\r\n  return (\r\n    <li className=\"sessionItems\">\r\n      {sessionsPerDay.length > 0 &&\r\n        sessionsPerDay.map((session) => {\r\n          return (\r\n            <SlotUI\r\n              key={session.session_id}\r\n              dose1={session.available_capacity_dose1}\r\n              availableDose={session.available_capacity}\r\n              dose2={session.available_capacity_dose2}\r\n              vaccineName={session.vaccine}\r\n              ageCategory={session.min_age_limit}\r\n              date={session.date}\r\n              slots={session.slots}\r\n            />\r\n          );\r\n        })}\r\n      {isEmpty(sessionsPerDay) && (\r\n        <div className=\"slotUI-empty\">\r\n          <span>NA</span>\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default SessionsItems;\r\n","import React from \"react\";\r\nimport { isEmpty } from \"lodash\";\r\nimport \"./style.scss\";\r\n\r\nconst VaccineFee = (props) => {\r\n  const { vaccine, fee } = props;\r\n  return (\r\n    <span>\r\n      {vaccine} {fee}\r\n    </span>\r\n  );\r\n};\r\n\r\nfunction Center(props) {\r\n  const { name, feeType, address, vaccineFee } = props;\r\n  return (\r\n    <div className=\"centerInfo\">\r\n      <div className=\"centerInfo-heading\">\r\n        <h5>{name}</h5>\r\n        {feeType === \"Paid\" && <span>{feeType}</span>}\r\n      </div>\r\n      <p className=\"centerInfo-address\">{address}</p>\r\n      {!isEmpty(vaccineFee) && (\r\n        <div className=\"centerInfo-footer\">\r\n          {vaccineFee.map((vaccine) => {\r\n            return (\r\n              <VaccineFee\r\n                key={vaccine.vaccine}\r\n                vaccine={vaccine.vaccine}\r\n                fee={vaccine.fee}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Center;\r\n","import React from \"react\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport \"./style.scss\";\r\n\r\nconst getDoseText = (dose) => {\r\n  let doseText = \"\";\r\n  if (dose === 0) {\r\n    doseText = <MdClose color=\"#cd275f\" size=\"25\" />;\r\n  } else {\r\n    doseText = <span className=\"--green\">{dose} slots</span>;\r\n  }\r\n  return doseText;\r\n};\r\n\r\nfunction ResultCard(props) {\r\n  const { name, address, ageCategory, dose1, dose2, feeType, vaccine } = props;\r\n\r\n  const doseText1 = getDoseText(dose1);\r\n  const doseText2 = getDoseText(dose2);\r\n\r\n  return (\r\n    <div className=\"resultCard\">\r\n      <div className=\"resultCard-center-vaccine\">\r\n        <div className=\"resultCard-centerInfo\">\r\n          <h5 className=\"resultCard-center\">{name}</h5>\r\n          <p className=\"resultCard-address\">{address}</p>\r\n        </div>\r\n        <div className=\"resultCard-vaccineInfo\">\r\n          <h3>{vaccine}</h3>\r\n          <div className=\"resultCard-vaccineInfo-feeType\">\r\n            <span>{feeType}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"resultCard-doseInfo\">\r\n        <div className=\"resultCard-age\">\r\n          <span>Age {ageCategory}+</span>\r\n        </div>\r\n        <div className=\"resultCard-dose1\">\r\n          <span>Dose 1 {doseText1}</span>\r\n        </div>\r\n\r\n        <div className=\"resultCard-dose2\">\r\n          <span>Dose 2 {doseText2}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultCard;\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport ResultCard from \"./resultCard\";\r\nimport { isEmpty } from \"lodash\";\r\n\r\nfunction ResultCards(props) {\r\n  const { name, address, feeType, sessionInfo } = props;\r\n  return (\r\n    <>\r\n      {!isEmpty(sessionInfo) &&\r\n        sessionInfo.map((session) => {\r\n          return (\r\n            <ResultCard\r\n              key={session.session_id}\r\n              name={name}\r\n              address={address}\r\n              feeType={feeType}\r\n              ageCategory={session.min_age_limit}\r\n              dose1={session.available_capacity_dose1}\r\n              dose2={session.available_capacity_dose2}\r\n              vaccine={session.vaccine}\r\n            />\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResultCards;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SessionsItems from \"./SessionsItems\";\r\nimport Center from \"../resultData/center\";\r\nimport ResultCards from \"./resultCards\";\r\nimport { isEmpty } from \"lodash\";\r\nimport moment from \"moment\";\r\n\r\nfunction ResultDataItem(props) {\r\n  const { sessions } = props.centerData;\r\n  const searchDate = useSelector((state) => state.search.searchDate);\r\n  let sessionObj = {};\r\n\r\n  for (let i = 0; i < 7; i++) {\r\n    const date = moment(searchDate, \"DD-MM-YYYY\")\r\n      .add(i, \"days\")\r\n      .format(\"DD-MM-YYYY\");\r\n\r\n    sessionObj[date] = {};\r\n  }\r\n\r\n  const clubSessionWithDate = (sessions) => {\r\n    if (sessions.length > 0) {\r\n      sessions.forEach((session) => {\r\n        sessionObj[session.date] = isEmpty(sessionObj[session.date])\r\n          ? [session]\r\n          : [...sessionObj[session.date], session];\r\n      });\r\n    }\r\n    return sessionObj;\r\n  };\r\n\r\n  const formattedSession = clubSessionWithDate(sessions);\r\n\r\n  return (\r\n    <div className=\"resultRow\">\r\n      <div className=\"resultRow-desktop\">\r\n        <Center\r\n          name={props.centerData.name}\r\n          address={props.centerData.address}\r\n          vaccineFee={props.centerData.vaccine_fees}\r\n          feeType={props.centerData.fee_type}\r\n        />\r\n        <div className=\"sessionList-wrapper\">\r\n          <ul className=\"sessionList\">\r\n            {Object.keys(formattedSession).map((dates) => {\r\n              const uniqueKey = props.centerData.center_id + dates;\r\n              return (\r\n                <SessionsItems\r\n                  key={uniqueKey}\r\n                  session={formattedSession[dates]}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"resultRow-mobile\">\r\n        <ResultCards\r\n          name={props.centerData.name}\r\n          address={props.centerData.address}\r\n          vaccineFee={props.centerData.vaccine_fees}\r\n          feeType={props.centerData.fee_type}\r\n          sessionInfo={formattedSession[searchDate]}\r\n        ></ResultCards>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultDataItem;\r\n","const lang = {\r\n  pinError: \"Please enter correct Pin\",\r\n  pinFieldPlaceholder: \"Enter your Pin\",\r\n  stateFieldError: \"Please enter correct state\",\r\n  districtFieldError: \"Please enter correct district\",\r\n  vaccineNotAvailable: \"No Vaccination center is available for booking.\",\r\n};\r\n\r\nexport default lang;\r\n","import React from \"react\";\r\nimport { cloneDeep } from \"lodash\";\r\nimport ResultDataItem from \"./ResultDataItem\";\r\nimport lang from \"configs/lang.config\";\r\n\r\nconst checkAge = (activeFilters, session) => {\r\n  return (\r\n    (activeFilters.includes(\"age18\") && session.min_age_limit === 18) ||\r\n    (activeFilters.includes(\"age45\") && session.min_age_limit === 45)\r\n  );\r\n};\r\n\r\nconst checkVaccine = (activeFilters, session) => {\r\n  let result = false;\r\n  if (\r\n    ((activeFilters.includes(\"covishield\") ||\r\n      activeFilters.includes(\"covaxin\") ||\r\n      activeFilters.includes(\"sputnik\")) &&\r\n      activeFilters.includes(\"covishield\") &&\r\n      session.vaccine === \"COVISHIELD\") ||\r\n    (activeFilters.includes(\"covaxin\") && session.vaccine === \"COVAXIN\") ||\r\n    (activeFilters.includes(\"sputnik\") && session.vaccine === \"SPUTNIKV\")\r\n  ) {\r\n    result = true;\r\n  }\r\n  return result;\r\n};\r\n\r\nconst removeCentersWithoutSessions = (data) => {\r\n  return data.filter((center) => center.sessions.length > 0);\r\n};\r\n\r\nconst applyFilterOnSessions = (modifiedData, activeFilters) => {\r\n  modifiedData.forEach((center) => {\r\n    if (center.sessions.length > 0) {\r\n      let newSessions = center.sessions;\r\n      if (activeFilters.includes(\"age18\") || activeFilters.includes(\"age45\")) {\r\n        newSessions = center.sessions.filter((session) => {\r\n          return checkAge(activeFilters, session);\r\n        });\r\n      }\r\n      if (\r\n        activeFilters.includes(\"covishield\") ||\r\n        activeFilters.includes(\"covaxin\") ||\r\n        activeFilters.includes(\"sputnik\")\r\n      ) {\r\n        newSessions = newSessions.filter((session) => {\r\n          return checkVaccine(activeFilters, session);\r\n        });\r\n      }\r\n\r\n      center.sessions = newSessions;\r\n    }\r\n  });\r\n  return modifiedData;\r\n};\r\n\r\nconst filterCenterByFeeType = (centerData, activeFilters) => {\r\n  let result = false;\r\n  if (activeFilters.includes(\"paid\")) {\r\n    if (centerData.fee_type === \"Paid\") {\r\n      result = true;\r\n    }\r\n  }\r\n  if (activeFilters.includes(\"free\")) {\r\n    if (centerData.fee_type === \"Free\") {\r\n      result = true;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst modifyResponse = (responseData, activeFilters) => {\r\n  let modifiedData = responseData;\r\n\r\n  if (activeFilters.length > 0) {\r\n    if (activeFilters.includes(\"paid\") || activeFilters.includes(\"free\"))\r\n      modifiedData = modifiedData.filter((center) =>\r\n        filterCenterByFeeType(center, activeFilters)\r\n      );\r\n\r\n    if (\r\n      activeFilters.includes(\"age18\") ||\r\n      activeFilters.includes(\"age45\") ||\r\n      activeFilters.includes(\"covishield\") ||\r\n      activeFilters.includes(\"covaxin\") ||\r\n      activeFilters.includes(\"sputnik\")\r\n    ) {\r\n      modifiedData = applyFilterOnSessions(modifiedData, activeFilters);\r\n    }\r\n\r\n    modifiedData = removeCentersWithoutSessions(modifiedData);\r\n  }\r\n  return modifiedData;\r\n};\r\n\r\nfunction ResultDataListWithFilter(props) {\r\n  let { responseData, activeFilters } = props;\r\n\r\n  let modifiedData = cloneDeep(responseData);\r\n\r\n  let modifiedRespnseData = modifyResponse(modifiedData, [...activeFilters]);\r\n  return (\r\n    <>\r\n      {modifiedRespnseData.length > 0 &&\r\n        modifiedRespnseData.map((slotCenter) => {\r\n          return (\r\n            <ResultDataItem\r\n              centerData={slotCenter}\r\n              key={slotCenter.center_id}\r\n            ></ResultDataItem>\r\n          );\r\n        })}\r\n      {modifiedRespnseData.length === 0 && (\r\n        <p className=\"--bold --align-center\">{lang.vaccineNotAvailable}</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResultDataListWithFilter;\r\n","import axios from \"axios\";\r\nimport { APIConfig } from \"../configs/config\";\r\n\r\nexport const fetchSlotByPin = async (pincode, date) => {\r\n  const response = await axios.get(\r\n    `${APIConfig.baseUrl}${APIConfig.searchByPin}?pincode=${pincode}&date=${date}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchStates = async () => {\r\n  const response = await axios.get(\r\n    `${APIConfig.baseUrl}${APIConfig.fetchStates}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchDistricts = async (stateId) => {\r\n  const response = await axios.get(\r\n    `${APIConfig.baseUrl}${APIConfig.fetchDistrict}/${stateId}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const fetchSlotsByDistrict = async (districtId, date) => {\r\n  const response = await axios.get(\r\n    `${APIConfig.baseUrl}${APIConfig.searchByDistrict}?district_id=${districtId}&date=${date}`\r\n  );\r\n  return response.data;\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport ResultDataListWithFilter from \"./ResultDataListWithFilter\";\r\nimport { fetchSlotsByDistrict, fetchSlotByPin } from \"services\";\r\nimport lang from \"configs/lang.config\";\r\n\r\nfunction ResultData(props) {\r\n  const [responseData, setResponseData] = useState([]);\r\n  const { pin, district, activeFilters } = props;\r\n\r\n  const date = useSelector((state) => state.search.searchDate);\r\n\r\n  const fetchSlotData = useCallback(async () => {\r\n    let response;\r\n    if (pin) {\r\n      response = await fetchSlotByPin(pin, date);\r\n    }\r\n    if (district) {\r\n      response = await fetchSlotsByDistrict(district, date);\r\n    }\r\n\r\n    setResponseData(response.centers);\r\n  }, [pin, date, district]);\r\n\r\n  useEffect(() => {\r\n    fetchSlotData();\r\n  }, [pin, date, fetchSlotData, district]);\r\n\r\n  return (\r\n    <div className=\"resultDataList\">\r\n      {responseData.length > 0 && (\r\n        <ResultDataListWithFilter\r\n          responseData={responseData}\r\n          activeFilters={activeFilters}\r\n        />\r\n      )}\r\n      {responseData.length === 0 && (\r\n        <p className=\"--bold resultDataList-no-vaccine\">\r\n          {lang.vaccineNotAvailable}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultData;\r\n","import React, { useState } from \"react\";\r\nimport SearchFilter from \"./searchFilter\";\r\nimport CalenderSlider from \"./calenderSlider\";\r\nimport ResultDataList from \"./resultData/ResultDataList\";\r\n\r\nfunction SearchGrid(props) {\r\n  const { pin, district } = props;\r\n  const [activeFilters, setActiveFilters] = useState([]);\r\n  const onSelectingFilter = (filterId, value) => {\r\n    let newActiveFilters = value\r\n      ? [...activeFilters, filterId]\r\n      : activeFilters.filter((filter) => filter !== filterId);\r\n    setActiveFilters(newActiveFilters);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchFilter onSelectingFilter={onSelectingFilter} />\r\n      <CalenderSlider />\r\n      <ResultDataList\r\n        pin={pin}\r\n        district={district}\r\n        activeFilters={activeFilters}\r\n      ></ResultDataList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchGrid;\r\n","export const FETCH_STATES_REQUEST = \"FETCH_STATES_REQUEST\";\r\nexport const FETCH_STATES_SUCCESS = \"FETCH_STATES_SUCCESS\";\r\nexport const FETCH_STATES_FAILURE = \"FETCH_STATES_FAILURE\";\r\n","import { fetchStates as fetchStateAPI } from \"services\";\r\nimport {\r\n  FETCH_STATES_FAILURE,\r\n  FETCH_STATES_REQUEST,\r\n  FETCH_STATES_SUCCESS,\r\n} from \"./stateTypes\";\r\n\r\nexport const fetchStates = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(fetchStatesRequest());\r\n      const response = await fetchStateAPI();\r\n      const states = response.states;\r\n      dispatch(fetchStatesSuccess(states));\r\n    } catch (error) {\r\n      dispatch(fetchStatesFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchStatesRequest = () => {\r\n  return {\r\n    type: FETCH_STATES_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchStatesSuccess = (states) => {\r\n  return {\r\n    type: FETCH_STATES_SUCCESS,\r\n    payload: states,\r\n  };\r\n};\r\n\r\nexport const fetchStatesFailure = (error) => {\r\n  return {\r\n    type: FETCH_STATES_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n","export const FETCH_DISTRICTS_REQUEST = \"FETCH_DISTRICTS_REQUEST\";\r\nexport const FETCH_DISTRICTS_SUCCESS = \"FETCH_DISTRICTS_SUCCESS\";\r\nexport const FETCH_DISTRICTS_FAILURE = \"FETCH_DISTRICTS_FAILURE\";\r\n","import { fetchDistricts as fetchDistrictsAPI } from \"services\";\r\nimport {\r\n  FETCH_DISTRICTS_SUCCESS,\r\n  FETCH_DISTRICTS_FAILURE,\r\n  FETCH_DISTRICTS_REQUEST,\r\n} from \"./districtsTypes\";\r\n\r\nexport const fetchDistricts = (stateId) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(fetchDistrictsRequest());\r\n      const response = await fetchDistrictsAPI(stateId);\r\n      const districts = response.districts;\r\n      dispatch(fetchDistrictsSuccess(stateId, districts));\r\n    } catch (error) {\r\n      dispatch(fetchDistrictsFailure(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchDistrictsRequest = () => {\r\n  return {\r\n    type: FETCH_DISTRICTS_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchDistrictsSuccess = (stateId, districts) => {\r\n  return {\r\n    type: FETCH_DISTRICTS_SUCCESS,\r\n    payload: { stateId: stateId, districts: districts },\r\n  };\r\n};\r\n\r\nexport const fetchDistrictsFailure = (error) => {\r\n  return {\r\n    type: FETCH_DISTRICTS_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n","import React, { useEffect, useCallback, useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport SearchGrid from \"components/searchGrid\";\r\nimport { isEmpty } from \"lodash\";\r\nimport lang from \"configs/lang.config\";\r\nimport { fetchStates as fetchStatesAction } from \"redux/states/stateActions\";\r\nimport { fetchDistricts as fetchDistrictsAction } from \"redux/districts/districtsActions\";\r\nimport { addSearchDate } from \"redux/search/searchActions\";\r\nimport \"./style.scss\";\r\n\r\nfunction SearchByDistrict() {\r\n  const states = useSelector((state) => state.states.states);\r\n  const districts = useSelector((state) => state.districts.districts);\r\n  const [stateError, setStateError] = useState(null);\r\n  const [districtError, setDistrictError] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const [enteredStateId, setEnteredStateId] = useState();\r\n  const [districtId, setDistrictId] = useState();\r\n\r\n  const districtRef = useRef();\r\n  const stateRef = useRef();\r\n\r\n  const fetchState = useCallback(() => {\r\n    if (states.length === 0) {\r\n      dispatch(fetchStatesAction());\r\n    }\r\n  }, [dispatch, states]);\r\n\r\n  useEffect(() => {\r\n    fetchState();\r\n  }, [fetchState]);\r\n\r\n  const stateChangeHandler = (e) => {\r\n    const stateId = e.target.value;\r\n    if (stateId !== \"\") {\r\n      setStateError(null);\r\n    }\r\n    setEnteredStateId(stateId);\r\n    if (!districts[stateId]) {\r\n      dispatch(fetchDistrictsAction(stateId));\r\n    }\r\n  };\r\n\r\n  const districtChangeHandler = (e) => {\r\n    const districtId = e.target.value;\r\n    if (districtId !== \"\") {\r\n      setDistrictError(null);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (districtRef.current.value === \"\" || stateRef.current.value === \"\") {\r\n      districtRef.current.value === \"\" &&\r\n        setDistrictError(lang.districtFieldError);\r\n      stateRef.current.value === \"\" && setStateError(lang.stateFieldError);\r\n    } else {\r\n      setDistrictId(districtRef.current.value);\r\n      const formattedCurrentDate = moment(new Date()).format(\"DD-MM-YYYY\");\r\n      dispatch(addSearchDate(formattedCurrentDate));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"searchByDistrict\">\r\n        <form className=\"searchByDistrict-form\" onSubmit={submitHandler}>\r\n          <div className=\"seachByDistrict-formControl\">\r\n            <select\r\n              name=\"state\"\r\n              id=\"state\"\r\n              onChange={stateChangeHandler}\r\n              ref={stateRef}\r\n              data-testid=\"state-selector\"\r\n            >\r\n              <option value=\"\">Select State</option>\r\n              {states.length > 0 &&\r\n                states.map((state) => {\r\n                  return (\r\n                    <option key={state.state_id} value={state.state_id}>\r\n                      {state.state_name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {stateError && <p className=\"cowin-field-error\">{stateError}</p>}\r\n          </div>\r\n          <div className=\"seachByDistrict-formControl\">\r\n            <select\r\n              name=\"district\"\r\n              id=\"district\"\r\n              ref={districtRef}\r\n              onChange={districtChangeHandler}\r\n              data-testid=\"district-selector\"\r\n            >\r\n              <option value=\"\">Select District</option>\r\n              {!isEmpty(districts) &&\r\n                districts[enteredStateId] &&\r\n                districts[enteredStateId].map((district) => {\r\n                  return (\r\n                    <option\r\n                      key={district.district_id}\r\n                      value={district.district_id}\r\n                    >\r\n                      {district.district_name}\r\n                    </option>\r\n                  );\r\n                })}\r\n            </select>\r\n            {districtError && (\r\n              <p className=\"cowin-field-error\">{districtError}</p>\r\n            )}\r\n          </div>\r\n          <div className=\"seachByDistrict-form-button\">\r\n            <button className=\"cowin-btn\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {districtId && <SearchGrid district={districtId}></SearchGrid>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchByDistrict;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { isNumber } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport SearchGrid from \"components/searchGrid\";\r\nimport lang from \"configs/lang.config\";\r\nimport { addSearchDate } from \"redux/search/searchActions\";\r\n\r\nimport \"./style.scss\";\r\n\r\nfunction SearchByPin() {\r\n  const [pin, setPin] = useState();\r\n  const [error, setError] = useState(null);\r\n  const pinRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const onChangePin = (e) => {\r\n    const enteredValue = parseInt(e.target.value);\r\n    if (!isNumber(enteredValue) || String(enteredValue).length > 6) {\r\n      setError(lang.pinError);\r\n    } else {\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const pinCode = parseInt(pinRef.current.value);\r\n\r\n    if (isNumber(pinCode) && String(pinCode).length === 6) {\r\n      setPin(pinCode);\r\n      const formattedCurrentDate = moment(new Date()).format(\"DD-MM-YYYY\");\r\n      dispatch(addSearchDate(formattedCurrentDate));\r\n    } else {\r\n      setError(lang.pinError);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <form className=\"searchByPin-form\" onSubmit={submitHandler}>\r\n          <div className=\"searchByPin-formControl\">\r\n            <input\r\n              className=\"cowin-field\"\r\n              type=\"tel\"\r\n              name=\"pincode\"\r\n              id=\"pincode\"\r\n              placeholder=\"Enter you Pin\"\r\n              ref={pinRef}\r\n              onChange={onChangePin}\r\n            />\r\n            {error && <p className=\"cowin-field-error\">{error}</p>}\r\n          </div>\r\n          <div>\r\n            <input className=\"cowin-btn\" type=\"submit\" value=\"Search\" />\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {pin && <SearchGrid pin={pin} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchByPin;\r\n","import React, { useState, useContext } from \"react\";\r\nimport SearchTabs from \"components/searchTabs\";\r\nimport SearchByMap from \"components/searchByMap\";\r\nimport SearchByDistrict from \"components/searchByDistrict\";\r\nimport SearchByPin from \"components/searchByPin\";\r\nimport { searchTypes } from \"configs/config\";\r\nimport \"./style.scss\";\r\nimport themeContext from \"context/ThemeContext\";\r\n\r\nfunction Home() {\r\n  const [selectedTab, setSelectedTab] = useState(searchTypes.searchByPin);\r\n\r\n  const tabClickHandler = (name) => {\r\n    setSelectedTab(name);\r\n  };\r\n\r\n  const ctx = useContext(themeContext);\r\n\r\n  return (\r\n    <main className={ctx.mode}>\r\n      <h2 className=\"main-heading\">\r\n        Check your nearest vaccination center and slots availability\r\n      </h2>\r\n      <SearchTabs tabClickHandler={tabClickHandler} />\r\n      {selectedTab === searchTypes.searchByMap && <SearchByMap />}\r\n      {selectedTab === searchTypes.searchByPin && <SearchByPin />}\r\n      {selectedTab === searchTypes.searchByDistrict && <SearchByDistrict />}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import {\r\n  FETCH_DISTRICTS_REQUEST,\r\n  FETCH_DISTRICTS_FAILURE,\r\n  FETCH_DISTRICTS_SUCCESS,\r\n} from \"./districtsTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  districts: {},\r\n  error: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_DISTRICTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    }\r\n    case FETCH_DISTRICTS_SUCCESS: {\r\n      return {\r\n        loading: false,\r\n        error: \"\",\r\n        districts: {\r\n          ...state.districts,\r\n          [action.payload.stateId]: action.payload.districts,\r\n        },\r\n      };\r\n    }\r\n    case FETCH_DISTRICTS_FAILURE: {\r\n      return {\r\n        loading: false,\r\n        districts: { ...state.districts },\r\n        error: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import {\r\n  FETCH_STATES_SUCCESS,\r\n  FETCH_STATES_FAILURE,\r\n  FETCH_STATES_REQUEST,\r\n} from \"./stateTypes\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  states: [],\r\n  error: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_STATES_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    }\r\n    case FETCH_STATES_SUCCESS: {\r\n      return {\r\n        loading: false,\r\n        states: action.payload,\r\n        error: \"\",\r\n      };\r\n    }\r\n    case FETCH_STATES_FAILURE: {\r\n      return {\r\n        loading: false,\r\n        states: [],\r\n        error: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { ADD_SEARCH_DATE } from \"./searchTypes\";\r\n\r\nconst initialState = {\r\n  searchDate: null,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_SEARCH_DATE: {\r\n      return {\r\n        ...state,\r\n        searchDate: action.payload,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import districtsReducer from \"./districts/districtsReducer\";\r\nimport statesReducer from \"./states/stateReducer\";\r\nimport searchReducer from \"./search/searchReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  states: statesReducer,\r\n  districts: districtsReducer,\r\n  search: searchReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        trace: true,\r\n      })\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk)\r\n  // other store enhancers if any\r\n);\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\nexport default store;\r\n","import Header from \"components/header\";\r\nimport Footer from \"components/footer\";\r\nimport Home from \"components/home\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"redux/store\";\r\nimport { ThemeProvider } from \"context/ThemeContext\";\r\n\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap-grid.css\";\r\n\r\nimport \"App.scss\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider>\r\n        <Header></Header>\r\n        <Home></Home>\r\n        <Footer></Footer>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}